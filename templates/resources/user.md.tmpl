---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{.Name}} {{.Type}} - {{.RenderedProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type}})

{{ .Description | trimspace }}

Users in BMLT have different permission levels and can be assigned to service bodies. They can authenticate to the BMLT system and perform actions based on their user type.

## Example Usage

### Basic User Creation

```terraform
# Create a basic service body admin user
resource "bmlt_user" "webservant" {
  username     = "webservant"
  password     = var.webservant_password
  type         = "serviceBodyAdmin"
  display_name = "Web Servant"
}

variable "webservant_password" {
  description = "Password for webservant user"
  type        = string
  sensitive   = true
}
```

### Server Administrator User

```terraform
# Create a server administrator with full privileges
resource "bmlt_user" "server_admin" {
  username     = "server.admin"
  password     = var.server_admin_password
  type         = "serverAdmin"
  display_name = "Server Administrator"
  description  = "Main server administrator account"
  email        = "admin@bmlt.example.com"
}
```

### User with Owner Relationship

```terraform
# Create a parent admin user
resource "bmlt_user" "regional_admin" {
  username     = "regional.admin"
  password     = var.regional_admin_password
  type         = "serviceBodyAdmin"
  display_name = "Regional Administrator"
  description  = "Regional Service Office Administrator"
  email        = "rso@region.na.org"
}

# Create a child user owned by the regional admin
resource "bmlt_user" "area_admin" {
  username     = "area.admin"
  password     = var.area_admin_password
  type         = "serviceBodyAdmin"
  display_name = "Area Administrator"
  description  = "Area Service Committee Administrator"
  email        = "asc@area.na.org"
  owner_id     = bmlt_user.regional_admin.id  # Owned by regional admin
}
```

### Complete User Configuration

```terraform
# Complete user configuration with all available fields
resource "bmlt_user" "complete_user" {
  username     = "complete.user"
  password     = var.user_password
  type         = "serviceBodyAdmin"
  display_name = "Complete Example User"
  description  = "A user account demonstrating all available configuration options"
  email        = "complete.user@example.na.org"
  owner_id     = 1  # Owned by user with ID 1
}
```



{{ .SchemaMarkdown | trimspace }}

## Import

Users can be imported using their numeric ID:

```shell
terraform import bmlt_user.example 456
```

## Notes

- **User Types**: Common types include:
  - `serverAdmin` - Full server administrator privileges
  - `serviceBodyAdmin` - Can administer assigned service bodies
  - `observer` - Read-only access
  - `deactivated` - Deactivated user account
  
- **Password Management**: 
  - Passwords are sensitive and not returned from the API after creation
  - When updating a user, only provide `password` if you want to change it
  - For security, consider using Terraform variables for passwords

- **Owner Relationships**: Users can have owner relationships, useful for hierarchical user management

- **Email Validation**: The email field should contain a valid email address if provided

- **Username Uniqueness**: Usernames must be unique across the BMLT server
